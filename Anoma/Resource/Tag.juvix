module Anoma.Resource.Tag;

import Stdlib.Prelude open;
import Stdlib.Debug open;
import Anoma.Resource.Object open using {Resource};
import Anoma.Resource.Types open;
import Anoma.Builtin.System open;

  --- The reference to the ;Resource;.
  type Tag :=
    | Created Commitment
    | Consumed Nullifier with

  toNat : Tag -> Nat
    | (Created x) := Commitment.toNat x
    | (Consumed x) := Nullifier.toNat x;

  fromNat (n : Nat) : Tag :=
    if
      | isNullifier n := Consumed (Nullifier.mk n)
      | isCommitment n := Created (Commitment.mk n)
      | else :=
        failwith "given natural is neither a nullifier nor a commitment";

  deriving instance
  Tag-Ord : Ord Tag;

  deriving instance
  Tag-Eq : Eq Tag;
end;

open Tag using {Consumed; Created} public;
