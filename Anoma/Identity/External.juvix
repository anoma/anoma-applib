module Anoma.Identity.External;

import Stdlib.Prelude open;
import Anoma.Builtin.ByteArray open using {ByteArray; toAnomaContents};

--- A fixed-size data type describing an external identity.
type ExternalIdentity :=
  mk@{
    unExternalIdentity : ByteArray;
  }
with
  fromByteArray : ByteArray -> ExternalIdentity := ExternalIdentity.mk;

  toByteArray : ExternalIdentity -> ByteArray :=
    ExternalIdentity.unExternalIdentity;

  toNat : ExternalIdentity -> Nat := toByteArray >> toAnomaContents;

  deriving instance
  ExternalIdentity-Ord : Ord ExternalIdentity;

  deriving instance
  ExternalIdentity-Eq : Eq ExternalIdentity;

  instance
  ExternalIdentity-Show : Show ExternalIdentity :=
    Show.mk \{iden := "<<ExternalIdentity>>"};
end;
