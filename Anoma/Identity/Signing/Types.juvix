module Anoma.Identity.Signing.Types;

import Stdlib.Prelude open;
import Anoma.Identity.Internal open;
import Anoma.Identity.External open;
import Anoma.Builtin.ByteArray as ByteArray open;
import Anoma.Builtin.System as SystemBuiltins open;

type Signature :=
  mk@{
    unSignature : ByteArray;
  };

{-# inline: true #-}
sign
  : {Message : Type}
    -- | The message to sign.
    -> (message : Message)
    -- | The signing internal identity.
    -> (signer : InternalIdentity)
    -- | The resulting signature
    -> Signature
  | message internalIdentity :=
    SystemBuiltins.anomaSignDetached
        message
        (InternalIdentity.toByteArray internalIdentity)
      |> Signature.mk;
