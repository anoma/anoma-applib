module Anoma.State.CommitmentTree;

import Stdlib.Prelude open;

--- A state root of the commitment tree.
type Root :=
  internalMk@{
    unRoot : Nat;
  }
with
  fromNat : Nat -> Root := internalMk;

  toNat : Root -> Nat := unRoot;
end;

--- A path in the commitment tree.
type Path :=
  internalMk@{
    unPath : List Nat;
  }
with
  fromList : List Nat -> Path := internalMk;

  toList : Path -> List Nat := unPath;
end;

deriving instance
Root-Ord : Ord Root;

deriving instance
Root-Eq : Eq Root;
