module Applib.Utils.Counter.Unique.Label;

import Stdlib.Prelude open;
import Anoma open;
import Anoma.Builtin.System open;
import Applib.Identities open;

--- The counter label being a wrapper around a nullifier.
type CounterLabel := mkCounterLabel@{nullifier : Nullifier};

--- Constructs a unique counter label from a consumable resource.
--- @param consumable A consumable resource.
--- @return The unique counter label.
createUniqueCounterLabel (consumable : Resource) : CounterLabel :=
  mkCounterLabel (nullifier Universal.nullifierKey consumable);

--- Implements the ;Eq; trait for ;CounterLabel;.
instance
CounterLabel-Eq : Eq CounterLabel :=
  mkEq@{
    eq (lhs rhs : CounterLabel) : Bool :=
      CounterLabel.nullifier lhs == CounterLabel.nullifier rhs;
  };

--- Returns the ;CounterLabel; from a unique counter.
--- @param counter The counter.
--- @return The counter label.
getCounterLabel (counter : Resource) : CounterLabel :=
  counter
    |> Resource.labelRef
    |> lookupFromReferenceChecked
    |> Label.unLabel
    |> anomaDecode;

--- Returns the ;Nullifier; from the ;CounterLabel; from a unique counter.
--- @param counter The counter.
--- @return The nullifier.
getNullifierfFromLabel (counter : Resource) : Nullifier :=
  counter |> getCounterLabel |> CounterLabel.nullifier;
