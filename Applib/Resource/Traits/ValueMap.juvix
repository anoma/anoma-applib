module Applib.Resource.Traits.ValueMap;

import Stdlib.Prelude open;
import Anoma open;
import Anoma.Builtin.System open;

import Applib.Resource.Standards.ValueMap open;

trait
type HasValueMap ResourceT :=
  mkHasValueMap@{
    get : ResourceT -> ValueMap;
    set : ValueMap -> ResourceT -> ResourceT;
  };

instance
Resource-HasValueMap : HasValueMap Resource :=
  mkHasValueMap@{
    --- Returns the ;ValueMap; of the resource.
    --- @param resource The ;Resource; to return the value map from.
    --- @return The value map.
    get (resource : Resource) : ValueMap :=
      resource
        |> Resource.valueRef
        |> lookupFromReferenceChecked
        |> Value.unValue
        |> anomaDecode;

    --- Sets the ;ValueMap; of a resource.
    --- @param valueMap The value map to set.
    --- @param resource The resource to set the owner for.
    --- @return The updated resource.
    set (valueMap : ValueMap) (resource : Resource) : Resource :=
      resource@Resource{valueRef := valueMap
        |> anomaEncode
        |> mkValue
        |> BindingReference.compute};
  };
