module Applib.Resource.Traits.Supply;

import Stdlib.Prelude open;
import Anoma open;

type Supply :=
  | Unbound
  | Capped
  | Fixed Nullifier;

deriving instance
Supply-Eq : Eq Supply;

instance
Supply-Show : Show Supply :=
  mkShow
    \{
      | Unbound := "Unbound"
      | Capped := "Capped"
      | (Fixed f) := "Fixed"
    --"Fixed (nf: " ++str natToString (anomaEncode f) ++str ")"
    };

trait
type HasSupply ResourceT :=
  mkHasSupply@{
    get : ResourceT -> Supply;
    set : Supply -> ResourceT -> ResourceT;
  };
