module BaseLayer.TransactionRequest;

import Stdlib.Prelude open;
import BaseLayer.ResourceMachine open;
import Applib.Data.TxContext open;
import Applib.Trait.Tx open;

type TransactionCandidate :=
  mkTransactionCandidate@{
    --- keyspace is unused
    keyspace : Nat;
    transactionFunction : Unit -> Transaction;
  };

module TransactionRequest;
  type TransactionRequest :=
    mkTransactionRequest@{
      payload : Unit -> TransactionCandidate;
    };

  fromTransaction (tx : Transaction) : TransactionRequest :=
    mkTransactionRequest@{
      payload :=
        const
          mkTransactionCandidate@{
            keyspace := 0;
            transactionFunction := const tx;
          };
    };

  buildTransactionRequest
    (seed : Nat)
    (si : TxContext)
    : TxBuilder Transaction -> TransactionRequest :=
    runTx seed si >> fromTransaction;
end;

open TransactionRequest using {
  TransactionRequest;
  mkTransactionRequest;
  buildTransactionRequest;
} public;
